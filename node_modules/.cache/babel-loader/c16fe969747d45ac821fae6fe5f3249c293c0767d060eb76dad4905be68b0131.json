{"ast":null,"code":"import _slicedToArray from\"/home/mohanned/Downloads/battleship/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useContext}from'react';import Player from'../../factories/playerFactory';import{InitWindow,PlayerForm}from'../styled_components/gameControllerStyles';import{store}from'../../GameController';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Init(_ref){var setDismount=_ref.setDismount,dismount=_ref.dismount,playBgSound=_ref.playBgSound,checkIfMusicPaused=_ref.checkIfMusicPaused;var _useContext=useContext(store),dispatch=_useContext.dispatch;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var handleChange=function handleChange(e){setName(e.target.value);};var handleFocus=function handleFocus(){if(checkIfMusicPaused()){playBgSound('music');}};var handleSubmit=function handleSubmit(e){// do not refresh page\ne.preventDefault();// remove whitespace, reject space-only names\n// this does nothing for this function, only if there is an error\n// and needs to rerender. the setState would occur after this function completed\nsetName(name.trim());// can't do if(!name) because setName hasn't yet updated\nif(!name.trim()){setError('Name required');return;}else if(name.length>20){setError('Name is too long');return;}else{//remove the error if they enter a valid name after an invalid one\nsetError('');}var human=new Player(name.trim());var computer=new Player('Computer');dispatch({type:'SET_PLAYERS',payload:{human:human,computer:computer}});// this allows for the component to render with\n// the fade out animation into the next app state\nsetDismount(true);};// this triggers if the component is fading out into next app state\nvar handleAnimationEnd=function handleAnimationEnd(){if(dismount)dispatch({type:'SET_TIMELINE',payload:'setup'});};return/*#__PURE__*/_jsx(InitWindow,{children:/*#__PURE__*/_jsxs(PlayerForm,{style:{animation:dismount?'fadeout 1.5s':'fadein 6s ease-in'},onSubmit:handleSubmit,onAnimationEnd:handleAnimationEnd,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Enter player name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",id:\"name\",placeholder:\"Battleship combatant\",onChange:handleChange,onFocus:handleFocus,autoComplete:\"off\",value:name}),/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Start game\"})]})});}export default Init;","map":{"version":3,"names":["React","useState","useContext","Player","InitWindow","PlayerForm","store","Init","setDismount","dismount","playBgSound","checkIfMusicPaused","dispatch","name","setName","error","setError","handleChange","e","target","value","handleFocus","handleSubmit","preventDefault","trim","length","human","computer","type","payload","handleAnimationEnd","animation","color"],"sources":["/home/mohanned/Downloads/battleship/src/components/game_window/Init.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport Player from '../../factories/playerFactory';\nimport {\n\tInitWindow,\n\tPlayerForm,\n} from '../styled_components/gameControllerStyles';\nimport { store } from '../../GameController';\n\nfunction Init({ setDismount, dismount, playBgSound, checkIfMusicPaused }) {\n\tconst { dispatch } = useContext(store);\n\tconst [name, setName] = useState('');\n\tconst [error, setError] = useState('');\n\n\tconst handleChange = (e) => {\n\t\tsetName(e.target.value);\n\t};\n\n\tconst handleFocus = () => {\n\t\tif (checkIfMusicPaused()) {\n\t\t\tplayBgSound('music');\n\t\t}\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\t// do not refresh page\n\t\te.preventDefault();\n\n\t\t// remove whitespace, reject space-only names\n\t\t// this does nothing for this function, only if there is an error\n\t\t// and needs to rerender. the setState would occur after this function completed\n\t\tsetName(name.trim());\n\n\t\t// can't do if(!name) because setName hasn't yet updated\n\t\tif (!name.trim()) {\n\t\t\tsetError('Name required');\n\t\t\treturn;\n\t\t} else if (name.length > 20) {\n\t\t\tsetError('Name is too long');\n\t\t\treturn;\n\t\t} else {\n\t\t\t//remove the error if they enter a valid name after an invalid one\n\t\t\tsetError('');\n\t\t}\n\n\t\tconst human = new Player(name.trim());\n\t\tconst computer = new Player('Computer');\n\t\tdispatch({ type: 'SET_PLAYERS', payload: { human, computer } });\n\n\t\t// this allows for the component to render with\n\t\t// the fade out animation into the next app state\n\t\tsetDismount(true);\n\t};\n\n\t// this triggers if the component is fading out into next app state\n\tconst handleAnimationEnd = () => {\n\t\tif (dismount) dispatch({ type: 'SET_TIMELINE', payload: 'setup' });\n\t};\n\n\treturn (\n\t\t<InitWindow>\n\t\t\t<PlayerForm\n\t\t\t\tstyle={{ animation: dismount ? 'fadeout 1.5s' : 'fadein 6s ease-in' }}\n\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\tonAnimationEnd={handleAnimationEnd}\n\t\t\t>\n\t\t\t\t<label htmlFor='name'>Enter player name:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='name'\n\t\t\t\t\tid='name'\n\t\t\t\t\tplaceholder='Battleship combatant'\n\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\tonFocus={handleFocus}\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\tvalue={name}\n\t\t\t\t/>\n\t\t\t\t{/* displays errors if name is invalid */}\n\t\t\t\t<p style={{ color: 'red' }}>{error}</p>\n\t\t\t\t<button type='submit'>Start game</button>\n\t\t\t</PlayerForm>\n\t\t</InitWindow>\n\t);\n}\n\nexport default Init;\n"],"mappings":"yHAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,MAAOC,OAAM,KAAM,+BAA+B,CAClD,OACCC,UAAU,CACVC,UAAU,KACJ,2CAA2C,CAClD,OAASC,KAAK,KAAQ,sBAAsB,CAAC,wFAE7C,QAASC,KAAI,MAA6D,IAA1DC,YAAW,MAAXA,WAAW,CAAEC,QAAQ,MAARA,QAAQ,CAAEC,WAAW,MAAXA,WAAW,CAAEC,kBAAkB,MAAlBA,kBAAkB,CACrE,gBAAqBT,UAAU,CAACI,KAAK,CAAC,CAA9BM,QAAQ,aAARA,QAAQ,CAChB,cAAwBX,QAAQ,CAAC,EAAE,CAAC,wCAA7BY,IAAI,eAAEC,OAAO,eACpB,eAA0Bb,QAAQ,CAAC,EAAE,CAAC,yCAA/Bc,KAAK,eAAEC,QAAQ,eAEtB,GAAMC,aAAY,CAAG,QAAfA,aAAY,CAAIC,CAAC,CAAK,CAC3BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACxB,CAAC,CAED,GAAMC,YAAW,CAAG,QAAdA,YAAW,EAAS,CACzB,GAAIV,kBAAkB,EAAE,CAAE,CACzBD,WAAW,CAAC,OAAO,CAAC,CACrB,CACD,CAAC,CAED,GAAMY,aAAY,CAAG,QAAfA,aAAY,CAAIJ,CAAC,CAAK,CAC3B;AACAA,CAAC,CAACK,cAAc,EAAE,CAElB;AACA;AACA;AACAT,OAAO,CAACD,IAAI,CAACW,IAAI,EAAE,CAAC,CAEpB;AACA,GAAI,CAACX,IAAI,CAACW,IAAI,EAAE,CAAE,CACjBR,QAAQ,CAAC,eAAe,CAAC,CACzB,OACD,CAAC,IAAM,IAAIH,IAAI,CAACY,MAAM,CAAG,EAAE,CAAE,CAC5BT,QAAQ,CAAC,kBAAkB,CAAC,CAC5B,OACD,CAAC,IAAM,CACN;AACAA,QAAQ,CAAC,EAAE,CAAC,CACb,CAEA,GAAMU,MAAK,CAAG,GAAIvB,OAAM,CAACU,IAAI,CAACW,IAAI,EAAE,CAAC,CACrC,GAAMG,SAAQ,CAAG,GAAIxB,OAAM,CAAC,UAAU,CAAC,CACvCS,QAAQ,CAAC,CAAEgB,IAAI,CAAE,aAAa,CAAEC,OAAO,CAAE,CAAEH,KAAK,CAALA,KAAK,CAAEC,QAAQ,CAARA,QAAS,CAAE,CAAC,CAAC,CAE/D;AACA;AACAnB,WAAW,CAAC,IAAI,CAAC,CAClB,CAAC,CAED;AACA,GAAMsB,mBAAkB,CAAG,QAArBA,mBAAkB,EAAS,CAChC,GAAIrB,QAAQ,CAAEG,QAAQ,CAAC,CAAEgB,IAAI,CAAE,cAAc,CAAEC,OAAO,CAAE,OAAQ,CAAC,CAAC,CACnE,CAAC,CAED,mBACC,KAAC,UAAU,wBACV,MAAC,UAAU,EACV,KAAK,CAAE,CAAEE,SAAS,CAAEtB,QAAQ,CAAG,cAAc,CAAG,mBAAoB,CAAE,CACtE,QAAQ,CAAEa,YAAa,CACvB,cAAc,CAAEQ,kBAAmB,wBAEnC,cAAO,OAAO,CAAC,MAAM,gCAA2B,cAChD,cACC,IAAI,CAAC,MAAM,CACX,IAAI,CAAC,MAAM,CACX,EAAE,CAAC,MAAM,CACT,WAAW,CAAC,sBAAsB,CAClC,QAAQ,CAAEb,YAAa,CACvB,OAAO,CAAEI,WAAY,CACrB,YAAY,CAAC,KAAK,CAClB,KAAK,CAAER,IAAK,EACX,cAEF,UAAG,KAAK,CAAE,CAAEmB,KAAK,CAAE,KAAM,CAAE,UAAEjB,KAAK,EAAK,cACvC,eAAQ,IAAI,CAAC,QAAQ,wBAAoB,GAC7B,EACD,CAEf,CAEA,cAAeR,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}