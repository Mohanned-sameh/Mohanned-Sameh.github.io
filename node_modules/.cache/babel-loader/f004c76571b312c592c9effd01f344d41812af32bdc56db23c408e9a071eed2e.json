{"ast":null,"code":"import _slicedToArray from\"/home/mohanned/Downloads/battleship-main/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{GameBoardGrid,Cell,SetupGridContainer}from'../styled_components/gameControllerStyles';import React,{useState,useContext}from'react';import shipTypes from'../../game_helpers/shipTypes';import{store}from'../../GameController';import{jsx as _jsx}from\"react/jsx-runtime\";function CellSelectorGrid(_ref){var handlePlaceShip=_ref.handlePlaceShip,currentShip=_ref.currentShip,axis=_ref.axis;var _useContext=useContext(store),state=_useContext.state;var timeline=state.timeline;var player=state.players.human;var playerBoard=player.gameBoard;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),hovered=_useState2[0],setHovered=_useState2[1];var mouseEnterHandler=function mouseEnterHandler(index,board){// this makes the cells where the ship will be placed highlighted, unless\n// that placement is invalid. Disabled when the game starts.\nif(timeline==='setup'){var shipLength=shipTypes[currentShip].length;var locations=[];for(var i=0;i<shipLength;i++){axis==='x'?locations.push(index+i):locations.push(index+i*10);}if(board.checkCollisions(locations)){setHovered(locations);}}};var mouseLeaveHandler=function mouseLeaveHandler(){setHovered([]);};return/*#__PURE__*/_jsx(SetupGridContainer,{children:/*#__PURE__*/_jsx(GameBoardGrid,{children:playerBoard.board.map(function(cell,index){return/*#__PURE__*/_jsx(Cell,{highlight:hovered.includes(index),cursor:hovered.includes(index)?'pointer':'not-allowed',timeline:timeline,onClick:function onClick(){handlePlaceShip(index);},onMouseEnter:function onMouseEnter(){mouseEnterHandler(index,playerBoard);},onMouseLeave:function onMouseLeave(){mouseLeaveHandler(index,timeline);}},index);})})});}export default CellSelectorGrid;","map":{"version":3,"names":["GameBoardGrid","Cell","SetupGridContainer","React","useState","useContext","shipTypes","store","CellSelectorGrid","handlePlaceShip","currentShip","axis","state","timeline","player","players","human","playerBoard","gameBoard","hovered","setHovered","mouseEnterHandler","index","board","shipLength","length","locations","i","push","checkCollisions","mouseLeaveHandler","map","cell","includes"],"sources":["/home/mohanned/Downloads/battleship-main/src/components/game_window/CellSelectorGrid.js"],"sourcesContent":["import {\n\tGameBoardGrid,\n\tCell,\n\tSetupGridContainer,\n} from '../styled_components/gameControllerStyles';\nimport React, { useState, useContext } from 'react';\nimport shipTypes from '../../game_helpers/shipTypes';\nimport { store } from '../../GameController';\n\nfunction CellSelectorGrid({ handlePlaceShip, currentShip, axis }) {\n\tconst { state } = useContext(store);\n\tconst { timeline } = state;\n\tconst player = state.players.human;\n\tconst playerBoard = player.gameBoard;\n\tconst [hovered, setHovered] = useState([]);\n\n\tconst mouseEnterHandler = (index, board) => {\n\t\t// this makes the cells where the ship will be placed highlighted, unless\n\t\t// that placement is invalid. Disabled when the game starts.\n\t\tif (timeline === 'setup') {\n\t\t\tconst shipLength = shipTypes[currentShip].length;\n\t\t\tconst locations = [];\n\t\t\tfor (let i = 0; i < shipLength; i++) {\n\t\t\t\taxis === 'x'\n\t\t\t\t\t? locations.push(index + i)\n\t\t\t\t\t: locations.push(index + i * 10);\n\t\t\t}\n\t\t\tif (board.checkCollisions(locations)) {\n\t\t\t\tsetHovered(locations);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst mouseLeaveHandler = () => {\n\t\tsetHovered([]);\n\t};\n\n\treturn (\n\t\t<SetupGridContainer>\n\t\t\t<GameBoardGrid>\n\t\t\t\t{playerBoard.board.map((cell, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Cell\n\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\thighlight={hovered.includes(index)}\n\t\t\t\t\t\t\tcursor={hovered.includes(index) ? 'pointer' : 'not-allowed'}\n\t\t\t\t\t\t\ttimeline={timeline}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\thandlePlaceShip(index);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseEnter={() => {\n\t\t\t\t\t\t\t\tmouseEnterHandler(index, playerBoard);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonMouseLeave={() => {\n\t\t\t\t\t\t\t\tmouseLeaveHandler(index, timeline);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</GameBoardGrid>\n\t\t</SetupGridContainer>\n\t);\n}\n\nexport default CellSelectorGrid;\n"],"mappings":"8HAAA,OACCA,aAAa,CACbC,IAAI,CACJC,kBAAkB,KACZ,2CAA2C,CAClD,MAAOC,MAAK,EAAIC,QAAQ,CAAEC,UAAU,KAAQ,OAAO,CACnD,MAAOC,UAAS,KAAM,8BAA8B,CACpD,OAASC,KAAK,KAAQ,sBAAsB,CAAC,2CAE7C,QAASC,iBAAgB,MAAyC,IAAtCC,gBAAe,MAAfA,eAAe,CAAEC,WAAW,MAAXA,WAAW,CAAEC,IAAI,MAAJA,IAAI,CAC7D,gBAAkBN,UAAU,CAACE,KAAK,CAAC,CAA3BK,KAAK,aAALA,KAAK,CACb,GAAQC,SAAQ,CAAKD,KAAK,CAAlBC,QAAQ,CAChB,GAAMC,OAAM,CAAGF,KAAK,CAACG,OAAO,CAACC,KAAK,CAClC,GAAMC,YAAW,CAAGH,MAAM,CAACI,SAAS,CACpC,cAA8Bd,QAAQ,CAAC,EAAE,CAAC,wCAAnCe,OAAO,eAAEC,UAAU,eAE1B,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,KAAK,CAAEC,KAAK,CAAK,CAC3C;AACA;AACA,GAAIV,QAAQ,GAAK,OAAO,CAAE,CACzB,GAAMW,WAAU,CAAGlB,SAAS,CAACI,WAAW,CAAC,CAACe,MAAM,CAChD,GAAMC,UAAS,CAAG,EAAE,CACpB,IAAK,GAAIC,EAAC,CAAG,CAAC,CAAEA,CAAC,CAAGH,UAAU,CAAEG,CAAC,EAAE,CAAE,CACpChB,IAAI,GAAK,GAAG,CACTe,SAAS,CAACE,IAAI,CAACN,KAAK,CAAGK,CAAC,CAAC,CACzBD,SAAS,CAACE,IAAI,CAACN,KAAK,CAAGK,CAAC,CAAG,EAAE,CAAC,CAClC,CACA,GAAIJ,KAAK,CAACM,eAAe,CAACH,SAAS,CAAC,CAAE,CACrCN,UAAU,CAACM,SAAS,CAAC,CACtB,CACD,CACD,CAAC,CAED,GAAMI,kBAAiB,CAAG,QAApBA,kBAAiB,EAAS,CAC/BV,UAAU,CAAC,EAAE,CAAC,CACf,CAAC,CAED,mBACC,KAAC,kBAAkB,wBAClB,KAAC,aAAa,WACZH,WAAW,CAACM,KAAK,CAACQ,GAAG,CAAC,SAACC,IAAI,CAAEV,KAAK,CAAK,CACvC,mBACC,KAAC,IAAI,EAEJ,SAAS,CAAEH,OAAO,CAACc,QAAQ,CAACX,KAAK,CAAE,CACnC,MAAM,CAAEH,OAAO,CAACc,QAAQ,CAACX,KAAK,CAAC,CAAG,SAAS,CAAG,aAAc,CAC5D,QAAQ,CAAET,QAAS,CACnB,OAAO,CAAE,kBAAM,CACdJ,eAAe,CAACa,KAAK,CAAC,CACvB,CAAE,CACF,YAAY,CAAE,uBAAM,CACnBD,iBAAiB,CAACC,KAAK,CAAEL,WAAW,CAAC,CACtC,CAAE,CACF,YAAY,CAAE,uBAAM,CACnBa,iBAAiB,CAACR,KAAK,CAAET,QAAQ,CAAC,CACnC,CAAE,EAZGS,KAAK,CAaT,CAEJ,CAAC,CAAC,EACa,EACI,CAEvB,CAEA,cAAed,iBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}