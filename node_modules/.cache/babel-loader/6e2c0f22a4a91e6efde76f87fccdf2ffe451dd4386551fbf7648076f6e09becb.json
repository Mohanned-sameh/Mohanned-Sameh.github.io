{"ast":null,"code":"import shipTypes from'./shipTypes';import Ship from'../factories/shipFactory';import Gameboard from'../factories/gameboardFactory';function placeComputerShips(dispatch,gameBoard){// create a temporary board to check collisions and use single dispatch\n// we pass in our own board so we can use the methods on the class\nvar tempBoard=new Gameboard(gameBoard.board);var ships=[];shipTypes.forEach(function(shipType){var ship=new Ship(shipType.name,tempBoard.findRandomShipLocation(shipType));ship.position.forEach(function(pos){return tempBoard.board[pos].hasShip=ship.name;});ships.push(ship);});// update board state\ndispatch({type:'SET_BOARD',payload:{player:'computer',board:tempBoard.board}});// update ship state\ndispatch({type:'SET_SHIPS',payload:{ships:ships,player:'computer'}});}export default placeComputerShips;","map":{"version":3,"names":["shipTypes","Ship","Gameboard","placeComputerShips","dispatch","gameBoard","tempBoard","board","ships","forEach","shipType","ship","name","findRandomShipLocation","position","pos","hasShip","push","type","payload","player"],"sources":["/home/mohanned/Downloads/battleship/src/game_helpers/placeComputerShips.js"],"sourcesContent":["import shipTypes from './shipTypes';\nimport Ship from '../factories/shipFactory';\nimport Gameboard from '../factories/gameboardFactory';\n\nfunction placeComputerShips(dispatch, gameBoard) {\n\t// create a temporary board to check collisions and use single dispatch\n\t// we pass in our own board so we can use the methods on the class\n\tconst tempBoard = new Gameboard(gameBoard.board);\n\tconst ships = [];\n\n\tshipTypes.forEach((shipType) => {\n\t\tconst ship = new Ship(\n\t\t\tshipType.name,\n\t\t\ttempBoard.findRandomShipLocation(shipType)\n\t\t);\n\t\tship.position.forEach((pos) => (tempBoard.board[pos].hasShip = ship.name));\n\t\tships.push(ship);\n\t});\n\n\t// update board state\n\tdispatch({\n\t\ttype: 'SET_BOARD',\n\t\tpayload: {\n\t\t\tplayer: 'computer',\n\t\t\tboard: tempBoard.board,\n\t\t},\n\t});\n\t// update ship state\n\tdispatch({\n\t\ttype: 'SET_SHIPS',\n\t\tpayload: {\n\t\t\tships,\n\t\t\tplayer: 'computer',\n\t\t},\n\t});\n}\n\nexport default placeComputerShips;\n"],"mappings":"AAAA,MAAOA,UAAS,KAAM,aAAa,CACnC,MAAOC,KAAI,KAAM,0BAA0B,CAC3C,MAAOC,UAAS,KAAM,+BAA+B,CAErD,QAASC,mBAAkB,CAACC,QAAQ,CAAEC,SAAS,CAAE,CAChD;AACA;AACA,GAAMC,UAAS,CAAG,GAAIJ,UAAS,CAACG,SAAS,CAACE,KAAK,CAAC,CAChD,GAAMC,MAAK,CAAG,EAAE,CAEhBR,SAAS,CAACS,OAAO,CAAC,SAACC,QAAQ,CAAK,CAC/B,GAAMC,KAAI,CAAG,GAAIV,KAAI,CACpBS,QAAQ,CAACE,IAAI,CACbN,SAAS,CAACO,sBAAsB,CAACH,QAAQ,CAAC,CAC1C,CACDC,IAAI,CAACG,QAAQ,CAACL,OAAO,CAAC,SAACM,GAAG,QAAMT,UAAS,CAACC,KAAK,CAACQ,GAAG,CAAC,CAACC,OAAO,CAAGL,IAAI,CAACC,IAAI,EAAC,CAAC,CAC1EJ,KAAK,CAACS,IAAI,CAACN,IAAI,CAAC,CACjB,CAAC,CAAC,CAEF;AACAP,QAAQ,CAAC,CACRc,IAAI,CAAE,WAAW,CACjBC,OAAO,CAAE,CACRC,MAAM,CAAE,UAAU,CAClBb,KAAK,CAAED,SAAS,CAACC,KAClB,CACD,CAAC,CAAC,CACF;AACAH,QAAQ,CAAC,CACRc,IAAI,CAAE,WAAW,CACjBC,OAAO,CAAE,CACRX,KAAK,CAALA,KAAK,CACLY,MAAM,CAAE,UACT,CACD,CAAC,CAAC,CACH,CAEA,cAAejB,mBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}